@model AutoPartsStockControlSystem.Models.User
@{
    /**/

    /**/

    Layout = "~/Views/Shared/_Layout_DataTable.cshtml";
}

@using (Html.BeginForm("AddUsers", "AdminPage", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.UserID)

<div class="form-group">
    @Html.LabelFor(model => model.IDCard, "IDCard Number", new { @class = "control-label" })
    @Html.EditorFor(model => model.IDCard, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "text", minlength = "8", maxlength = "12", autocomplete = "off" } })
    @Html.ValidationMessageFor(model => model.IDCard, "", new { @class = "text-danger" })
    

</div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Name", new { @class = "control-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Surname, "Surname", new { @class = "control-label" })
        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", @required = "required", autocomplete = "off" } })
        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, "Email", new { @class = "control-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @required = "required", autocomplete = "off" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Contact, "Contact", new { @class = "control-label" })
        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @type = "number", @required = "required", autocomplete = "off" } })
        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger"})
    </div>


    <div class="form-group">

        @Html.LabelFor(model => model.UserType, "User Type", new { @class = "control-label", @required = "required" })

        @Html.DropDownListFor(model => model.UserType, new SelectList(new List<SelectListItem>
  {
      new SelectListItem { Text = "User" , Value = "User"},
      new SelectListItem { Text = "Admin", Value = "Admin" },
       new SelectListItem { Text = "Blocked", Value = "Blocked" }
  },
        "Value", // property to be set as Value of dropdown item
        "Text",  // property to be used as text of dropdown item
        "True"), // value that should be set selected of dropdown
        new { @class = "form-control" })

        @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })

    </div>


    <div class="form-group">
        @Html.HiddenFor(model => model.Password)
    </div>


    

    <div class="form-group">
        @Html.HiddenFor(model => model.ResetPasswordCode)
    </div>

    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn" />
    </div>
}